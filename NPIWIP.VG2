"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:","NPI WIP_Liubin\NPI_Liubin.exe"
"EXCEL:","NPI_WIP1.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","33"
"JOINROWS:","3"
"FILTERROWS:","7"
"COL_ID_COUNTER:","40"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","2:0:a0"
"TABLEGRID:","1"
"","F_Lot_Status_22",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","ALL.EMPLOYEE_HRDS"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","2:9:a1"
"TABLEGRID:","1"
"","Antares_Current_Lot",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","CD.ANTARES"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLServer"
"SINGLENODE:","CD.ANTARES"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Other Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"<---- New Query ---->","2:0:a3"
"TABLEGRID:","1"
"","PAC_SIT_MET",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","CD.ANTARES"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","2:5:a2"
"TABLEGRID:","1"
"","Employee_Master_v2",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","ALL.EMPLOYEE_HRDS"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","ALL.EMPLOYEE_HRDS"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Other Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_1}</@#;>MET2 List"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{Final Resault}</@#;>Final Resault"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Copy:Y@EXEDIR@\SPFCopy.bat <~>NPI_WIP.tab<~> <~>\\cdATSHFS.intel.com\CDATAnalysis$\MAOATM\WangQi4\NPI_WIP\<~> <~>N<~>"
"UTILITIESDESC:","Copy Files/Folders"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->SharePoint:Y@EXEDIR@\PublishToSP.va <~>NPI_WIP.tab<~> <~>https://content.sp2019.intel.com/sites/CD/CDATwebshare/IonReport/LotSize/<~> <~><~> <~><~>"
"UTILITIESDESC:","Publish to SharePoint"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.lot","lot","Y","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory. The basic format of the Lot number is:  FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lot","a0->f0.lot","col1"
"a0.operation","operation","Y","Asc","None","Row","c","The current operation (or processing step) the lot is at","f_lot","a0->f0.operation","col2"
"a0.prodgroup3","prodgroup3","Y","Asc","None","Row","c","Product Classification column. May be a useful filter in Assembly/Test","f_product","a0->p.prodgroup3","col3"
"a0.route","route","Y","None","None","Row","c","The current route the lot is on. In FAB300, this refers to the 2nd highest level in the process structure or level 3.","f_lot","a0->f0.route","col4"
"a0.quantity","quantity","Y","None","None","Row","n","The current number of units or wafers or panels in the lot","f_lot","a0->f0.qty1","col5"
"a0.owner","owner","Y","None","None","Row","c","Identifies the owner of the lot. Valid values include: ENG, PROD, TW. This maps to MES300 LotTypes","f_lot","a0->f0.owner","col6"
"a0.hold_category","hold_category","Y","None","None","Row","c","Identifies the hold reason code associated with the lot when it was put on hold. E.g., C4, Litho, SPC++","f_lot","a0->f0.hold_category","col8"
"a0.hold_name","hold_name","Y","None","None","Row","x","Hold Name","f_lot","a0->f0.hold_name","col15"
"a2.name","WS_ENG_LOT_OWNER","Y","None","None","Row","q","Employee Name","athrds_worker","a2->z0.lastname || ', ' || z0.firstname || CASE WHEN z0.middleinitial IS NOT NULL THEN ' ' || z0.middleinitial ELSE '' END","col19"
"a0.product","product","Y","None","None","Row","c","The current product associated with the lot","f_lot","a0->f0.product","col9"
"a0.days_at_operation","days_at_operation","Y:2","None","None","Row","f","Number of days the lot was at the operation. Subtracts SYSDATE from column Date_Entered_Operation. Multiply by 24 to transform the value to hours","f_lot","a0->(sysdate - f0.date_entered_operation)","col21"
"a1.entity","entity","Y","None","None","Row","c","","factorylot","a1->a0.[Entity]","col14"
"a0.movedin","movedin","Y","None","None","Row","c","Indicates if a move in transaction has been performed at the current operation. Y means a moved in transaction has been performed.","f_lot","a0->f0.movedin","col13"
"a0.movein_date","movein_date","Y","None","None","Row","d","The date and time the lot was moved into the current operation. Usually denotes when processing started on the lot","f_lot","a0->f0.movein_date","col12"
"a3.lot","lot_1","P","None","None","Row","c","Lot Number","f_pac_sitmet_v","a3->a0.lot","col31"
"a1.lot","lot_2","P","None","None","Row","c","","factorylot","a1->a0.[Lot]","col36"
"f(a0)->WS_ENG","WS_ENG","P","None","None","Row","x","***Lot attribute (105)","f_lot","a0->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f0.lot AND la.attribute_number = 105 AND rownum <= 1)","col17"
"f(a0)->SUBSTR( {ws_eng} ,1,8)","WS_ENG1","P","None","None","Row","C","***","@if@1","a0->SUBSTR( {col17} ,1,8)","col20"
"a2.wwid","wwid","P","None","None","Row","c","Employee World Wide ID","athrds_worker","a2->z0.wwid","col18"
"a0.last_comment","hold_comment","Y","None","None","Row","x","Comment collected for the lot for the most recent transaction. E.g., can get the last comment when the lot was put on Hold","f_lot","a0->(SELECT c99.comments FROm @MARSSCHEMA@F_LotCommentHist c99 WHERE c99.lot = f0.lot AND c99.operation = f0.operation AND c99.prevout_date = f0.date_entered_operation AND c99.txn_date = f0.last_action_date AND rownum <= 1)","col25"
"f(a0)->TPSync","TPSync","Y","None","None","Row","x","***Lot attribute (1215)","f_lot","a0->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f0.lot AND la.attribute_number = 1215 AND la.src_erase_date IS NULL AND rownum <= 1)","col26"
"f(a0)->ClassRunCards","ClassRunCards","Y","None","None","Row","x","***Lot attribute (703)","f_lot","a0->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f0.lot AND la.attribute_number = 703 AND la.src_erase_date IS NULL AND rownum <= 1)","col27"
"a0.at_mrb1","mrb1","Y","None","None","Row","c","Assembly/Test 1st MRB in Workstream decoded","f_lot","a0->CAST(CASE WHEN SUBSTR(f0.create_data1,2,4) is not null THEN (CAST(INSTR('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-=''!@#$%^&*()_+[]|:<>?' || chr(123) || chr(125) || '\;`,/.~', SUBSTR(f0.create_data1, 5, 1)) AS INT) - 1) * POWER(67, 0) + (CAST(INSTR('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-=''!@#$%^&*()_+[]|:<>?' || chr(123) || chr(125) || '\;`,/.~', SUBSTR(f0.create_data1, 4, 1)) AS INT) - 1) * POWER(67, 1) + (CAST(INSTR('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-=''!@#$%^&*()_+[]|:<>?' || chr(123) || chr(125) || '\;`,/.~', SUBSTR(f0.create_data1, 3, 1)) AS INT) - 1) * POWER(67, 2) +  (CAST(INSTR('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-=''!@#$%^&*()_+[]|:<>?' || chr(123) || chr(125) || '\;`,/.~', SUBSTR(f0.create_data1, 2, 1)) AS INT) - 1) * POWER(67, 3) END  as varchar(100) )","col28"
"a0.at_mrb2","mrb2","Y","None","None","Row","c","Assembly/Test 2nd MRB in Workstream decoded","f_lot","a0->CAST(CASE WHEN SUBSTR(f0.create_data1,6,4) is not null THEN (CAST(INSTR('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-=''!@#$%^&*()_+[]|:<>?' || chr(123) || chr(125) || '\;`,/.~', SUBSTR(f0.create_data1, 9, 1)) AS INT) - 1) * POWER(67, 0)  + (CAST(INSTR('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-=''!@#$%^&*()_+[]|:<>?' || chr(123) || chr(125) || '\;`,/.~', SUBSTR(f0.create_data1, 8, 1)) AS INT) - 1) * POWER(67, 1) + (CAST(INSTR('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-=''!@#$%^&*()_+[]|:<>?' || chr(123) || chr(125) || '\;`,/.~', SUBSTR(f0.create_data1, 7, 1)) AS INT) - 1) * POWER(67, 2) + (CAST(INSTR('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-=''!@#$%^&*()_+[]|:<>?' || chr(123) || chr(125) || '\;`,/.~', SUBSTR(f0.create_data1, 6, 1)) AS INT) - 1) * POWER(67, 3) END  as varchar(100) )","col29"
"a0.at_mrb3","mrb3","Y","None","None","Row","c","Assembly/Test 3rd MRB in Workstream decoded","f_lot","a0->CAST(CASE WHEN SUBSTR(f0.create_data1,10,4) is not null THEN (CAST(INSTR('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-=''!@#$%^&*()_+[]|:<>?' || chr(123) || chr(125) || '\;`,/.~', SUBSTR(f0.create_data1, 13, 1)) AS INT) - 1) * POWER(67, 0) + (CAST(INSTR('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-=''!@#$%^&*()_+[]|:<>?' || chr(123) || chr(125) || '\;`,/.~', SUBSTR(f0.create_data1, 12, 1)) AS INT) - 1) * POWER(67, 1) + (CAST(INSTR('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-=''!@#$%^&*()_+[]|:<>?' || chr(123) || chr(125) || '\;`,/.~', SUBSTR(f0.create_data1, 11, 1)) AS INT) - 1) * POWER(67, 2)  + (CAST(INSTR('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-=''!@#$%^&*()_+[]|:<>?' || chr(123) || chr(125) || '\;`,/.~', SUBSTR(f0.create_data1, 10, 1)) AS INT) - 1) * POWER(67, 3) END as varchar(100) )","col30"
"a3.days_remaining","days_remaining","Y","None","None","Row","n","Days remaining before MET expiry","f_pac_sitmet_v","a3->a0.days_remaining","col32"
"a3.hours_remaining","hours_remaining","Y","None","None","Row","n","Hours remaining before MET expiry","f_pac_sitmet_v","a3->a0.hours_remaining","col33"
"a3.drb_days_remaining","drb_days_remaining","Y","None","None","Row","n","Days remaining before METDRB expiry","f_pac_sitmet_v","a3->a0.drb_days_remaining","col34"
"a3.drb_hours_remaining","drb_hours_remaining","Y","None","None","Row","n","Hours remaining before METDRB expiry","f_pac_sitmet_v","a3->a0.drb_hours_remaining","col35"
"a3.window_name","window_name","Y","None","None","Row","c","The legacy timer from the PAC UI or the METID ATRMS parameter value.","f_pac_sitmet_v","a3->a0.window_name","col37"
"a1.met_24","met_24","Y","None","None","Row","n","","factorylot","a1->a0.[Met24]","col38"
"a1.met_drb","met_drb","Y","None","None","Row","n","","factorylot","a1->a0.[MetDrb]","col39"
"f(x)->COUNT ( {window_name} ) OVER (PARTITION BY  {lot}  )","count","Y","None","None","Row","N","***","f_lot","All->COUNT ( {col37} ) OVER (PARTITION BY  {col1}  )","col40"
"JOINGRID:"
"","","View->a0.lot                                                                                                    : a0->{col1}","=","View->a3.lot                                                                                                    : a3->{col31}",""
"","","View->a0.lot                                                                                                    : a0->{col1}","=","View->a1.lot                                                                                                    : a1->{col36}",""
"","","View->f(a0)->WS_ENG1                                                                                                    : a0->{col20}","=","View->a2.wwid                                                                                                    : a2->{col18}",""
"FILTERGRID:"
"AND","","a0.terminated","=","'N'","","","c","f_lot","a0->f0.terminated",""
"AND","","a0.quantity",">","0","","","n","f_lot","a0->f0.qty1",""
"AND","","a0.src_erase_date","Is Null","","","","d","f_lot","a0->f0.src_erase_date",""
"-- AND","","a0.owner","!=","'TEST'","","","c","f_lot","a0->f0.owner",""
"AND","","a2.employee_status_code","Not In","'R','T'","","","c","athrds_worker","a2->z0.geniempstatus",""
"AND","","a2.wwid","In Temp","{View (a0)} : View->ws_eng1","",".","c","athrds_worker","a2->z0.wwid","a0->{col20}"
"AND","","a3.window_name","Like","'MET%'","","","c","f_pac_sitmet_v","a3->a0.window_name",""
/START_EMBED_ALL
/EMBED=VG2;Final Resault
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","NPI_WIP.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","36"
"JOINROWS:","1"
"FILTERROWS:","0"
"COL_ID_COUNTER:","39"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","2"
"","NPI_WIP1.tab a0",""
"","NPI_WIP_MET2.tab a1",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.lot","lot","Y","None","None","Row","c","","csv","SQL->a0.[lot]","col1"
"a0.operation","operation","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col2"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col3"
"a0.route","route","Y","None","None","Row","c","","csv","SQL->a0.[route]","col4"
"a0.quantity","quantity","Y","None","None","Row","c","","csv","SQL->a0.[quantity]","col5"
"a0.owner","owner","Y","None","None","Row","c","","csv","SQL->a0.[owner]","col6"
"a0.hold_category","hold_category","Y","None","None","Row","c","","csv","SQL->a0.[hold_category]","col7"
"a0.hold_name","hold_name","Y","None","None","Row","c","","csv","SQL->a0.[hold_name]","col8"
"f(x)->{hours_remaining} /24+ {days_remaining}","met_1","P","None","None","Row","F","***","@if@1","SQL->{col24} /24+ {col23}","col27"
"f(x)->CASE WHEN  {count} =2 THEN  {met1_1} ELSE  {met11}  END","met1","Y:1","None","None","Row","F","***","@if@3","SQL->CASE WHEN  {col34} =2 THEN  {col36} ELSE  {col29}  END","col37"
"f(x)->CASE WHEN  {met_1} is null  THEN   {met_24} ELSE  {met_1}  END","met11","P","None","None","Row","F","***","@if@2","SQL->CASE WHEN  {col27} is null  THEN   {col30} ELSE  {col27}  END","col29"
"a0.ws_eng_lot_owner","ws_eng_lot_owner","Y","None","None","Row","c","","csv","SQL->a0.[ws_eng_lot_owner]","col10"
"a0.product","product","Y","None","None","Row","c","","csv","SQL->a0.[product]","col11"
"a0.days_at_operation","days_at_operation","Y","None","None","Row","c","","csv","SQL->a0.[days_at_operation]","col12"
"a0.entity","entity","Y","None","None","Row","c","","csv","SQL->a0.[entity]","col13"
"a0.movedin","movedin","Y","None","None","Row","c","","csv","SQL->a0.[movedin]","col14"
"a0.movein_date","movein_date","Y","None","None","Row","c","","csv","SQL->a0.[movein_date]","col15"
"f(x)->{drb_hours_remaining} /24+{drb_days_remaining}","met_drb","P","None","None","Row","F","***","@if@1","SQL->{col26} /24+{col25}","col28"
"f(x)->CASE WHEN  {met_drb} is null  THEN  {met_drb_1} ELSE  {met_drb}  END","metdrb1","P","None","None","Row","F","***","@if@2","SQL->CASE WHEN  {col28} is null  THEN  {col31} ELSE  {col28}  END","col32"
"f(x)->CASE WHEN  {count} =2 THEN   {metdrb11} ELSE   {metdrb1} END","metdrb","Y:1","None","None","Row","F","***","@if@3","SQL->CASE WHEN  {col34} =2 THEN   {col39} ELSE   {col32} END","col38"
"a0.hold_comment","hold_comment","Y","None","None","Row","c","","csv","SQL->a0.[hold_comment]","col17"
"a0.tpsync","tpsync","Y","None","None","Row","c","","csv","SQL->a0.[tpsync]","col18"
"a0.classruncards","classruncards","Y","None","None","Row","c","","csv","SQL->a0.[classruncards]","col19"
"a0.mrb1","mrb1","Y","None","None","Row","c","","csv","SQL->a0.[mrb1]","col20"
"a0.mrb2","mrb2","Y","None","None","Row","c","","csv","SQL->a0.[mrb2]","col21"
"a0.mrb3","mrb3","Y","None","None","Row","c","","csv","SQL->a0.[mrb3]","col22"
"f(x)->days_remaining","days_remaining","P","None","None","Row","f","days_remaining","csv","SQL->CASE WHEN a0.[days_remaining] = '' THEN NULL ELSE CAST (a0.[days_remaining] AS REAL) END","col23"
"f(x)->hours_remaining","hours_remaining","P","None","None","Row","f","hours_remaining","csv","SQL->CASE WHEN a0.[hours_remaining] = '' THEN NULL ELSE CAST (a0.[hours_remaining] AS REAL) END","col24"
"f(x)->drb_days_remaining","drb_days_remaining","P","None","None","Row","f","drb_days_remaining","csv","SQL->CASE WHEN a0.[drb_days_remaining] = '' THEN NULL ELSE CAST (a0.[drb_days_remaining] AS REAL) END","col25"
"f(x)->drb_hours_remaining","drb_hours_remaining","P","None","None","Row","f","drb_hours_remaining","csv","SQL->CASE WHEN a0.[drb_hours_remaining] = '' THEN NULL ELSE CAST (a0.[drb_hours_remaining] AS REAL) END","col26"
"f(x)->met_24","met_24","P","None","None","Row","f","met_24","csv","SQL->CASE WHEN a0.[met_24] = '' THEN NULL ELSE CAST (a0.[met_24] AS REAL) END","col30"
"f(x)->met_drb_1","met_drb_1","P","None","None","Row","f","met_drb_1","csv","SQL->CASE WHEN a0.[met_drb] = '' THEN NULL ELSE CAST (a0.[met_drb] AS REAL) END","col31"
"f(x)->count","count","P","None","None","Row","f","count","csv","SQL->CASE WHEN a0.[count] = '' THEN NULL ELSE CAST (a0.[count] AS REAL) END","col34"
"a1.lot","lot_1","P","None","None","Row","c","","csv","SQL->a1.[lot]","col35"
"f(x)->met1_1","met1_1","P","None","None","Row","f","met1_1","csv","SQL->CASE WHEN a1.[met1] = '' THEN NULL ELSE CAST (a1.[met1] AS REAL) END","col36"
"f(x)->metdrb","metdrb11","P","None","None","Row","f","metdrb","csv","SQL->CASE WHEN a1.[metdrb] = '' THEN NULL ELSE CAST (a1.[metdrb] AS REAL) END","col39"
"JOINGRID:"
"","","Sqlite->a0.lot                                                                                                    : SQL->{col1}","=","Sqlite->a1.lot                                                                                                    : SQL->{col35}",""
"FILTERGRID:"




/END_EMBED
/EMBED=VG2;PrePostQuery_1
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","NPI_WIP_MET2.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","31"
"JOINROWS:","0"
"FILTERROWS:","1"
"COL_ID_COUNTER:","34"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","NPI_WIP1.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.lot","lot","Y","None","None","Row","c","","csv","SQL->a0.[lot]","col1"
"a0.operation","operation","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col2"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col3"
"a0.route","route","Y","None","None","Row","c","","csv","SQL->a0.[route]","col4"
"a0.quantity","quantity","Y","None","None","Row","c","","csv","SQL->a0.[quantity]","col5"
"a0.owner","owner","Y","None","None","Row","c","","csv","SQL->a0.[owner]","col6"
"a0.hold_category","hold_category","Y","None","None","Row","c","","csv","SQL->a0.[hold_category]","col7"
"a0.hold_name","hold_name","Y","None","None","Row","c","","csv","SQL->a0.[hold_name]","col8"
"f(x)->{hours_remaining} /24+ {days_remaining}","met_1","P","None","None","Row","F","***","@if@1","SQL->{col24} /24+ {col23}","col27"
"f(x)->CASE WHEN  {met_1} is null  THEN   {met_24} ELSE  {met_1}  END","met1","Y:1","None","None","Row","F","***","@if@2","SQL->CASE WHEN  {col27} is null  THEN   {col30} ELSE  {col27}  END","col29"
"a0.ws_eng_lot_owner","ws_eng_lot_owner","Y","None","None","Row","c","","csv","SQL->a0.[ws_eng_lot_owner]","col10"
"a0.product","product","Y","None","None","Row","c","","csv","SQL->a0.[product]","col11"
"a0.days_at_operation","days_at_operation","Y","None","None","Row","c","","csv","SQL->a0.[days_at_operation]","col12"
"a0.entity","entity","Y","None","None","Row","c","","csv","SQL->a0.[entity]","col13"
"a0.movedin","movedin","Y","None","None","Row","c","","csv","SQL->a0.[movedin]","col14"
"a0.movein_date","movein_date","Y","None","None","Row","c","","csv","SQL->a0.[movein_date]","col15"
"f(x)->{drb_hours_remaining} /24+{drb_days_remaining}","met_drb","P","None","None","Row","F","***","@if@1","SQL->{col26} /24+{col25}","col28"
"f(x)->CASE WHEN  {met_drb} is null  THEN  {met_drb_1} ELSE  {met_drb}  END","metdrb","Y:1","None","None","Row","F","***","@if@2","SQL->CASE WHEN  {col28} is null  THEN  {col31} ELSE  {col28}  END","col32"
"a0.hold_comment","hold_comment","Y","None","None","Row","c","","csv","SQL->a0.[hold_comment]","col17"
"a0.tpsync","tpsync","Y","None","None","Row","c","","csv","SQL->a0.[tpsync]","col18"
"a0.classruncards","classruncards","Y","None","None","Row","c","","csv","SQL->a0.[classruncards]","col19"
"a0.mrb1","mrb1","Y","None","None","Row","c","","csv","SQL->a0.[mrb1]","col20"
"a0.mrb2","mrb2","Y","None","None","Row","c","","csv","SQL->a0.[mrb2]","col21"
"a0.mrb3","mrb3","Y","None","None","Row","c","","csv","SQL->a0.[mrb3]","col22"
"f(x)->days_remaining","days_remaining","P","None","None","Row","f","days_remaining","csv","SQL->CASE WHEN a0.[days_remaining] = '' THEN NULL ELSE CAST (a0.[days_remaining] AS REAL) END","col23"
"f(x)->hours_remaining","hours_remaining","P","None","None","Row","f","hours_remaining","csv","SQL->CASE WHEN a0.[hours_remaining] = '' THEN NULL ELSE CAST (a0.[hours_remaining] AS REAL) END","col24"
"f(x)->drb_days_remaining","drb_days_remaining","P","None","None","Row","f","drb_days_remaining","csv","SQL->CASE WHEN a0.[drb_days_remaining] = '' THEN NULL ELSE CAST (a0.[drb_days_remaining] AS REAL) END","col25"
"f(x)->drb_hours_remaining","drb_hours_remaining","P","None","None","Row","f","drb_hours_remaining","csv","SQL->CASE WHEN a0.[drb_hours_remaining] = '' THEN NULL ELSE CAST (a0.[drb_hours_remaining] AS REAL) END","col26"
"f(x)->met_24","met_24","P","None","None","Row","f","met_24","csv","SQL->CASE WHEN a0.[met_24] = '' THEN NULL ELSE CAST (a0.[met_24] AS REAL) END","col30"
"f(x)->met_drb_1","met_drb_1","P","None","None","Row","f","met_drb_1","csv","SQL->CASE WHEN a0.[met_drb] = '' THEN NULL ELSE CAST (a0.[met_drb] AS REAL) END","col31"
"a0.count","count","Y","None","None","Row","c","","csv","SQL->a0.[count]","col34"
"JOINGRID:"
"FILTERGRID:"
"AND","","a0.window_name","=","'MET 1'","","","c","csv","SQL->a0.[window_name]",""




/END_EMBED
/END_EMBED_ALL
